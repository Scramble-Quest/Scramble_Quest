let availableWords = [...words]; // ‡∏î‡∏∂‡∏á‡∏Ñ‡∏≥‡∏®‡∏±‡∏û‡∏ó‡πå‡∏à‡∏≤‡∏Å wordgbeg.js
let currentWord = {};
let streak = 0; // Streak ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ó‡∏µ‡πà 0
let timeLeft = 30; // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
let timer; // ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏à‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤
let lives = 3; // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏´‡∏±‡∏ß‡πÉ‡∏à‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô

let wordText, hintText, inputField, streakText, timeText, livesText;

window.onload = () => {
    wordText = document.getElementById("scrambled-word");
    hintText = document.getElementById("hint");
    inputField = document.getElementById("user-input");
    streakText = document.getElementById("streak");
    timeText = document.querySelector(".time span b"); // ‡∏î‡∏∂‡∏á element ‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏ß‡∏•‡∏≤
    livesText = document.getElementById("lives"); // ‡∏î‡∏∂‡∏á element ‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏±‡∏ß‡πÉ‡∏à

    console.log("Available words:", availableWords); // üî• ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏Ñ‡∏≥‡∏®‡∏±‡∏û‡∏ó‡πå‡πÇ‡∏´‡∏•‡∏î‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
    initGame();
};

const initGame = () => {
    if (availableWords.length === 0) {
        availableWords = [...words]; // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Ñ‡∏≥‡∏®‡∏±‡∏û‡∏ó‡πå‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏´‡∏°‡∏î
    }

    clearInterval(timer); // ‡∏´‡∏¢‡∏∏‡∏î‡∏ï‡∏±‡∏ß‡∏à‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏Å‡πà‡∏≤
    timeLeft = 30; // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏´‡∏°‡πà
    updateTimerDisplay(); // ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÉ‡∏´‡∏°‡πà
    updateLivesDisplay(); // ‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏±‡∏ß‡πÉ‡∏à
    startTimer(); // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ô‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡∏ñ‡∏≠‡∏¢‡∏´‡∏•‡∏±‡∏á

    let randomIndex = Math.floor(Math.random() * availableWords.length);
    currentWord = availableWords[randomIndex];

    availableWords.splice(randomIndex, 1); // ‡∏•‡∏ö‡∏Ñ‡∏≥‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß

    console.log("Selected word:", currentWord); // üî• ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏Ñ‡∏≥‡∏ñ‡∏π‡∏Å‡∏™‡∏∏‡πà‡∏°‡∏à‡∏£‡∏¥‡∏á‡πÑ‡∏´‡∏°
    wordText.innerText = scrambleWord(currentWord.word) || "Error!"; // ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏´‡∏≤‡∏¢
    hintText.innerText = `Hint: ${currentWord.hint}` || "No hint available"; // ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏´‡∏≤‡∏¢
    inputField.value = "";
    inputField.style.background = "white"; // üî• ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏™‡∏µ‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡∏≤‡∏ß‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Ñ‡∏≥‡πÉ‡∏´‡∏°‡πà
};

const startTimer = () => {
    timer = setInterval(() => {
        timeLeft--;
        updateTimerDisplay();

        if (timeLeft <= 0) {
            clearInterval(timer);
            reduceLife(); // üî• ‡πÄ‡∏ß‡∏•‡∏≤‡∏´‡∏°‡∏î‡∏•‡∏î‡∏´‡∏±‡∏ß‡πÉ‡∏à
        }
    }, 1000);
};

const updateTimerDisplay = () => {
    timeText.innerText = timeLeft; // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ñ‡πà‡∏≤‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏ô HTML
};

const updateLivesDisplay = () => {
    livesText.innerText = "‚ù§Ô∏è ".repeat(lives); // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏´‡∏±‡∏ß‡πÉ‡∏à‡πÉ‡∏ô HTML
};

const reduceLife = () => {
    lives--; // ‡∏•‡∏î‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏´‡∏±‡∏ß‡πÉ‡∏à
    updateLivesDisplay();

    if (lives <= 0) {
        alert("üíÄ Game Over! ‡∏Ñ‡∏∏‡∏ì‡∏´‡∏°‡∏î‡∏´‡∏±‡∏ß‡πÉ‡∏à‡πÅ‡∏•‡πâ‡∏ß!");
        resetGame(); // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡πÄ‡∏Å‡∏°‡πÉ‡∏´‡∏°‡πà
    } else {
        alert(`‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏™‡∏µ‡∏¢‡∏´‡∏±‡∏ß‡πÉ‡∏à! ‡πÄ‡∏´‡∏•‡∏∑‡∏≠ ‚ù§Ô∏è ${lives} ‡∏î‡∏ß‡∏á`);
        initGame(); // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Ñ‡∏≥‡πÉ‡∏´‡∏°‡πà
    }
};

const checkWord = () => {
    let userWord = inputField.value.toLocaleLowerCase();
    if (userWord !== currentWord.word) {
        inputField.style.background = "red"; // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏µ‡πÅ‡∏î‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ú‡∏¥‡∏î
        setTimeout(() => { inputField.style.background = "white"; }, 1000); // ‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏µ‡∏Ç‡∏≤‡∏ß‡∏´‡∏•‡∏±‡∏á 1 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
        streak = 0; // üî• ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï Streak ‡∏ñ‡πâ‡∏≤‡∏ï‡∏≠‡∏ö‡∏ú‡∏¥‡∏î
        streakText.innerText = `üî• Streak: ${streak}`;
        reduceLife(); // üî• ‡∏•‡∏î‡∏´‡∏±‡∏ß‡πÉ‡∏à‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ú‡∏¥‡∏î
        return;
    }

    inputField.style.background = "green"; // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ñ‡∏π‡∏Å
    setTimeout(() => { inputField.style.background = "white"; }, 1000); // ‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏µ‡∏Ç‡∏≤‡∏ß‡∏´‡∏•‡∏±‡∏á 1 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
    streak++; // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡πà‡∏≤ Streak ‡∏ñ‡πâ‡∏≤‡∏ï‡∏≠‡∏ö‡∏ñ‡∏π‡∏Å
    streakText.innerText = `üî• Streak: ${streak}`;
    alert(`‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á! üéâ Streak: ${streak}`);

    initGame();
};

const scrambleWord = (word) => {
    return word.split("").sort(() => Math.random() - 0.5).join("");
};

const resetGame = () => {
    streak = 0;
    lives = 3; // üî• ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏´‡∏±‡∏ß‡πÉ‡∏à
    availableWords = [...words]; // ‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡∏≥‡∏®‡∏±‡∏û‡∏ó‡πå‡πÉ‡∏´‡∏°‡πà
    initGame(); // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏Å‡∏°‡πÉ‡∏´‡∏°‡πà
};

// üî• ‡∏•‡πâ‡∏≤‡∏á‡∏Ñ‡πà‡∏≤ Streak ‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÄ‡∏Å‡∏°
window.addEventListener("beforeunload", function () {
    streak = 0;
    lives = 3;
});
